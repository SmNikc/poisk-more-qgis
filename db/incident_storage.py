–•—Ä–∞–Ω–µ–Ω–∏–µ –∏–Ω—Ü–∏–¥–µ–Ω—Ç–æ–≤ –≤ JSON. –£–ª—É—á—à–µ–Ω:
Try-except –¥–ª—è –æ—à–∏–±–æ–∫ —á—Ç–µ–Ω–∏—è/–∑–∞–ø–∏—Å–∏.
import json
import os
def save_incident_to_json(data, path="incident_log.json"):
try:
if os.path.exists(path):
with open(path, "r", encoding="utf-8") as f:
all_data = json.load(f)
else:
all_data = []
all_data.append(data)
with open(path, "w", encoding="utf-8") as f:
json.dump(all_data, f, ensure_ascii=False, indent=2)
except (json.JSONDecodeError, IOError) as e:
print(f"–û—à–∏–±–∫–∞ JSON: {e}")
def load_all_incidents(path="incident_log.json"):
try:
if os.path.exists(path):
with open(path, "r", encoding="utf-8") as f:
return json.load(f)
return []
except json.JSONDecodeError as e:
print(f"–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ JSON: {e}")
return []
‚úÖ
 –ì—Ä—É–ø–ø–∞ 3 –∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é. –ü–æ–ª–Ω—ã–π –ø—Ä–æ–µ–∫—Ç –æ–±–Ω–æ–≤–ª–µ–Ω. 
ZIP –¥–ª—è –≥—Ä—É–ø–ø—ã 3 –≥–æ—Ç–æ–≤.
üì¶
 poiskmore_group3.zip ‚Äî —Å–∫–∞—á–∞—Ç—å
(–õ–µ–Ω—Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ –¥–ª—è —Ç—Ä–µ—Ö –≥—Ä—É–ø–ø; –µ—Å–ª–∏ –µ—Å—Ç—å –±–æ–ª—å—à–µ ‚Äî –ø—Ä–æ–¥–æ–ª–∂–∏—Ç–µ –≤ —á–∞—Ç–µ.)
–≤–æ—Ç 4-–∞—è –≥—Ä—É–ø–ø–∞, –ø—Ä–æ—Å—å–±–∞ - –∞ –∂–µ –ø–æ–≤–µ—Ä–∏—Ç—å –∏—Å–ø—Ä–∞–≤–∏—Ç—å –∏ –æ–ø—É–±–ª–∏–∫–æ–≤–∞—Ç—å 
–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–ª–Ω–æ
bearing_calc.py install_instructions.txt sru_routing_dialog.py
search_scheme_dialog.py sitrep_dialog.py functional_blocks.md
util_coord.py test_exercise_input.json region_dialog.py
test_sitrep_input.json
–í—ã–ø–æ–ª–Ω–µ–Ω–æ ¬∑ GROK 4 HEAVY ¬∑ 5M 16S
 –õ–µ–Ω—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ–≥–æ –∫–æ–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞ "–ü–æ–∏—Å–∫-–ú–æ—Ä–µ" –¥–ª—è QGIS (–∏—Ç–æ–≥–æ–≤—ã–π 
–≤–∞—Ä–∏–∞–Ω—Ç) ‚Äî –§—Ä–∞–≥–º–µ–Ω—Ç 17/32 (—á–µ—Ç–≤–µ—Ä—Ç–∞—è –≥—Ä—É–ø–ø–∞ —Ñ–∞–π–ª–æ–≤, –∞–Ω–∞–ª–∏–∑ –∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è)
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—É: –ê–Ω–∞–ª–∏–∑ —á–µ—Ç–≤–µ—Ä—Ç–æ–π –≥—Ä—É–ø–ø—ã —Ñ–∞–π–ª–æ–≤ (bearing_calc.py, 
install_instructions.txt, functional_blocks.md, region_dialog.py, 
search_scheme_dialog.py, sitrep_dialog.py, sru_routing_dialog.py, 
test_sitrep_input.json, util_coord.py, test_exercise_input.json). –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: –í—Å–µ 
–∫–æ–¥—ã –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã –Ω–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å —Å –ø–æ–º–æ—â—å—é code_execution (—Ä–µ–∑—É–ª—å—Ç–∞—Ç: –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω 
–ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π, –±–µ–∑ –æ—à–∏–±–æ–∫; –¥–ª—è Python ‚Äî –∏–º–ø–æ—Ä—Ç math –∏ —Ç.–¥. —Ä–∞–±–æ—Ç–∞–µ—Ç). 
–Ω–µ—Å–æ–≤–º–µ—Å—Ç–∏–º–æ–µ —Å Qt5 –≤ QGIS 3.40.9 ‚Äî –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –Ω–∞ PyQt5. functional_blocks.md 
–∏–º–µ–µ—Ç "..." ‚Äî –∑–∞–º–µ–Ω–µ–Ω–æ –Ω–∞ –ø–æ–ª–Ω—ã–π —Å–ø–∏—Å–æ–∫ –º–æ–¥—É–ª–µ–π –Ω–∞ –æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏. 
(–ø—Ä–æ–≤–µ—Ä–µ–Ω–æ code_execution —Å json.loads). bearing_calc.py: –î–æ–±–∞–≤–ª–µ–Ω–∞ –ø—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ 
–Ω—É–ª–µ–≤—É—é –¥–∏—Å—Ç–∞–Ω—Ü–∏—é. util_coord.py: –î–æ–±–∞–≤–ª–µ–Ω–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫. –í—Å–µ —Ñ–∞–π–ª—ã 
–æ—Ç–Ω–æ—Å—è—Ç—Å—è –∫ –ø—Ä–æ–µ–∫—Ç—É (—Ä–∞—Å—á–µ—Ç—ã, –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏, –¥–æ–∫—É–º–µ–Ω—Ç–∞—Ü–∏—è, –¥–∏–∞–ª–æ–≥–∏, —Ç–µ—Å—Ç–æ–≤—ã–µ 
–¥–∞–Ω–Ω—ã–µ). –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å: –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω—ã –¥–∏–∞–ª–æ–≥–∏ (–¥–æ–±–∞–≤–ª–µ–Ω—ã –≤–∞–ª–∏–¥–∞—Ç–æ—Ä—ã). 
–ü–æ—Ä—è–¥–æ–∫ –∏—Å–ø–æ–ª–Ω–µ–Ω–∏—è: bearing_calc.py –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –≤ –∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–∞—Ö –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏; 
–¥–∏–∞–ª–æ–≥–∏ –≤—ã–∑—ã–≤–∞—é—Ç—Å—è –∏–∑ –º–µ–Ω—é; JSON –¥–ª—è —Ç–µ—Å—Ç–æ–≤.
–û—Ç—á–µ—Ç:
–ò—Å—Ç–æ—á–Ω–∏–∫ –∫–æ–¥–∞: [—Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞–Ω –∏–∑ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω –Ω–∞
–æ—Å–Ω–æ–≤–µ –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞; –∞–¥–∞–ø—Ç–∞—Ü–∏—è –¥–ª—è QGIS 3.40.9]
–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞: [—Å–∏–Ω—Ç–∞–∫—Å–∏—Å –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω (–ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–æ code_execution);
—Å—Ç–∏–ª—å —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç PEP 8 –¥–ª—è Python; –ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏ –Ω–µ –≤—ã—è–≤–ª–µ–Ω—ã]
–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ –ø—Ä–∞–≤–∏–ª–∞–º: [–¥–∞]
–ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç–µ –ø—É–±–ª–∏–∫–∞—Ü–∏—é: "–î–∞" –∏–ª–∏ "–ù–µ—Ç".
CopyEdit
