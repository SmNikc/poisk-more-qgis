from PyQt5.QtWidgets import QDialog, QVBoxLayout, QLabel, QLineEdit, QComboBox, QDoubleSpinBox, QTextEdit, QPushButton, QHBoxLayout, QMessageBox
from PyQt5 import uic
import os
from qgis.core import QgsProject
class SearchObjectDialog(QDialog):
    def __init__(self, iface):
        super().__init__()
        self.iface = iface
        ui_path = os.path.join(os.path.dirname(__file__), 'dialog_search_object.ui')
        if os.path.exists(ui_path):
            uic.loadUi(ui_path, self)
        else:
            self.setup_ui()
        self.connect_buttons()
    def setup_ui(self):
        layout = QVBoxLayout(self)
        # Первичный объект поиска
        lbl_primary = QLabel("Первичный объект поиска")
        self.txt_primary = QLineEdit()
        layout.addWidget(lbl_primary)
        layout.addWidget(self.txt_primary)
        # Тип объекта для определения дрейфа
        lbl_type = QLabel("Тип объекта для определения дрейфа")
        self.cmb_type = QComboBox()
        self.cmb_type.addItems([
            "Авиационный спасательный плот (на 4-6 человек)",
            "Спасательная шлюпка",
            "Человек в воде",
            "Судно на плаву",
            "Другое"
        ])
        layout.addWidget(lbl_type)
        layout.addWidget(self.cmb_type)
        # Дрейф (характеристики объекта)
        lbl_drift = QLabel("Дрейф (длина/ширина/осадка)")
        self.spin_drift_length = QDoubleSpinBox(maximum=999.99, value=2.5)
        self.spin_drift_width = QDoubleSpinBox(maximum=999.99, value=1.5)
        self.spin_drift_draft = QDoubleSpinBox(maximum=99.99, value=0.2)
        hbox_drift = QHBoxLayout()
        hbox_drift.addWidget(QLabel("Длина:"))
        hbox_drift.addWidget(self.spin_drift_length)
        hbox_drift.addWidget(QLabel("Ширина:"))
        hbox_drift.addWidget(self.spin_drift_width)
        hbox_drift.addWidget(QLabel("Осадка:"))
        hbox_drift.addWidget(self.spin_drift_draft)
        layout.addWidget(lbl_drift)
        layout.addLayout(hbox_drift)
        # Координатор МСКЦ
        lbl_coordinator = QLabel("Координатор МСКЦ")
        self.txt_coordinator = QLineEdit("МСКЦ local")
        layout.addWidget(lbl_coordinator)
        layout.addWidget(self.txt_coordinator)
        # Прочее
        lbl_other = QLabel("Прочее")
        self.txt_other = QTextEdit()
        layout.addWidget(lbl_other)
        layout.addWidget(self.txt_other)