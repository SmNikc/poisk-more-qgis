from qgis.PyQt.QtWidgets import QAction
from PyQt5.QtWidgets import QDialog
from qgis.core import QgsApplication
import os

class PoiskMorePlugin:
    def __init__(self, iface):
        self.iface = iface
        self.actions = []

    def initGui(self):
        # üîî Splash‚Äêscreen –ø–µ—Ä–µ–¥ –≤—Å–µ–º –æ—Å—Ç–∞–ª—å–Ω—ã–º
        from dialogs.splash_dialog import SplashDialog
        splash = SplashDialog(self.iface.mainWindow())
        splash.exec_()

        # üåê –ì–ª–æ–±–∞–ª—å–Ω–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–≤–æ–¥–æ–≤ (–µ—Å–ª–∏ –Ω—É–∂–Ω–∞)
        # settings = QgsApplication.settings()
        # lang = settings.value("PoiskMore/language", "ru")
        # translator = QTranslator()
        # translator.load(f"poiskmore_{lang}.qm", os.path.join(os.path.dirname(__file__), "i18n"))
        # QgsApplication.installTranslator(translator)

        self.menu = "–ü–æ–∏—Å–∫-–ú–æ—Ä–µ"

        form_map = [
            ("–†–∞—Å—á—ë—Ç –¥—Ä–µ–π—Ñ–∞",              "DriftCalculationForm",         "dialogs.dialog_driftcalculation"),
            ("–ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–∏—Å–∫–∞",           "SearchAreaForm",                "dialogs.dialog_searcharea"),
            ("–°–æ–∑–¥–∞–Ω–∏–µ SITREP",            "SitrepForm",                    "dialogs.dialog_sitrep"),
            ("–û—Ç–ø—Ä–∞–≤–∫–∞ SITREP",            "SitrepSendForm",                "dialogs.dialog_sitrepsend"),
            ("–§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç—á—ë—Ç–∞",        "ReportGenerationForm",          "dialogs.dialog_reportgeneration"),
            ("–ü–æ—Å—Ç—É–ø–∏–≤—à–∞—è —Ç—Ä–µ–≤–æ–≥–∞",        "IncomingAlertForm",             "dialogs.dialog_incomingalert"),
            ("–ö–æ–æ—Ä–¥–∏–Ω–∞—Ü–∏—è —Å SRU",          "CoordinationForm",              "dialogs.dialog_coordination"),
            ("–ö–∞—Ä—Ç–∞ –∏ —Å–ª–æ–∏",               "GeoMapViewerForm",              "dialogs.dialog_geomapviewer"),
            ("–ù–∞—Å—Ç—Ä–æ–π–∫–∏",                  "SettingsForm",                  "dialogs.dialog_settings"),
            ("–ñ—É—Ä–Ω–∞–ª –¥–µ–π—Å—Ç–≤–∏–π",            "OperatorLogForm",               "dialogs.dialog_operatorlog"),
            ("–û—Ç—á—ë—Ç –≤ –ì–ú–°–ö–¶",              "GMSKCCenterReportForm",         "dialogs.dialog_gmskcreport"),
            ("–°—Ü–µ–Ω–∞—Ä–∏–π IAMSAR",            "IAMSARScenarioForm",            "dialogs.dialog_iamsarscenario"),
            ("–°—Ç–∞—Ç—É—Å –≤–Ω–µ—à–Ω–∏—Ö –º–æ–¥—É–ª–µ–π",     "ExternalSystemStatusForm",      "dialogs.dialog_externalsystemstatus")
        ]

        for label, class_name, module_path in form_map:
            action = QAction(label, self.iface.mainWindow())
            action.triggered.connect(self.make_form_opener(class_name, module_path))
            self.iface.addPluginToMenu(self.menu, action)
            # –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ –¥–ª—è SearchAreaForm –ø–µ—Ä–µ–¥–∞—ë–º mapCanvas
            if class_name == "SearchAreaForm":
                action.triggered.disconnect()
                action.triggered.connect(self.make_searcharea_opener(class_name, module_path))
            self.actions.append(action)

    def make_searcharea_opener(self, class_name, module_path):
        def open_searcharea():
            module = __import__(module_path, fromlist=[class_name])
            dlg_class = getattr(module, class_name)
            dlg = dlg_class()
            dlg.canvas = self.iface.mapCanvas()
            dlg.exec_()
        return open_searcharea

    def make_form_opener(self, class_name, module_path):
        def open_dialog():
            module = __import__(module_path, fromlist=[class_name])
            dlg_class = getattr(module, class_name)
            dlg = dlg_class()
            dlg.exec_()
        return open_dialog

    def unload(self):
        for action in self.actions:
            self.iface.removePluginMenu(self.menu, action)