import sys
from pathlib import Path

# --- –ö–û–ù–§–ò–ì–£–†–ê–¶–ò–Ø –û–®–ò–ë–û–ö –î–õ–Ø –ò–°–ü–†–ê–í–õ–ï–ù–ò–Ø ---
# –î–æ–±–∞–≤–ª—è–π—Ç–µ —Å—é–¥–∞ –¥—Ä—É–≥–∏–µ —Å—Ç—Ä–æ–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –Ω—É–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å –∏–ª–∏ –∑–∞–º–µ–Ω–∏—Ç—å.
# –§–æ—Ä–º–∞—Ç: '—á—Ç–æ_—É–¥–∞–ª–∏—Ç—å': '–Ω–∞_—á—Ç–æ_–∑–∞–º–µ–Ω–∏—Ç—å' (–ø—É—Å—Ç–∞—è —Å—Ç—Ä–æ–∫–∞ –¥–ª—è –ø–æ–ª–Ω–æ–≥–æ —É–¥–∞–ª–µ–Ω–∏—è)
# –í–∞–∂–Ω–æ: –≤–∫–ª—é—á–∞–π—Ç–µ –ø—Ä–æ–±–µ–ª—ã, —á—Ç–æ–±—ã –∑–∞–º–µ–Ω–∞ –±—ã–ª–∞ —Ç–æ—á–Ω–æ–π.
REPLACEMENTS = {
    ' translatable="yes"': '',
    # –ü—Ä–∏–º–µ—Ä –¥–ª—è –±—É–¥—É—â–∏—Ö –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π:
    # '<some_buggy_tag>': '<a_correct_tag>',
}

def clean_ui_file(file_path: Path) -> bool:
    """
    –ß–∏—Ç–∞–µ—Ç .ui —Ñ–∞–π–ª, —É–¥–∞–ª—è–µ—Ç –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –ø—Ä–æ–±–ª–µ–º–Ω—ã–µ –∞—Ç—Ä–∏–±—É—Ç—ã –∏ –ø–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ—Ç —Ñ–∞–π–ª.
    
    –í–æ–∑–≤—Ä–∞—â–∞–µ—Ç True, –µ—Å–ª–∏ —Ñ–∞–π–ª –±—ã–ª –∏–∑–º–µ–Ω–µ–Ω, –∏–Ω–∞—á–µ False.
    """
    try:
        # –ß–∏—Ç–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ —Ñ–∞–π–ª–∞ —Å —è–≤–Ω—ã–º —É–∫–∞–∑–∞–Ω–∏–µ–º –∫–æ–¥–∏—Ä–æ–≤–∫–∏ UTF-8
        original_content = file_path.read_text(encoding='utf-8')
        modified_content = original_content

        # –ü—Ä–∏–º–µ–Ω—è–µ–º –≤—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏–∑ —Å–ª–æ–≤–∞—Ä—è REPLACEMENTS
        for old, new in REPLACEMENTS.items():
            modified_content = modified_content.replace(old, new)

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–∏ –ª–∏ –≤–Ω–µ—Å–µ–Ω—ã –∏–∑–º–µ–Ω–µ–Ω–∏—è
        if original_content != modified_content:
            # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—ã–≤–∞–µ–º —Ñ–∞–π–ª —Ç–æ–ª—å–∫–æ –µ—Å–ª–∏ –æ–Ω –∏–∑–º–µ–Ω–∏–ª—Å—è
            file_path.write_text(modified_content, encoding='utf-8')
            return True
            
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Ñ–∞–π–ª–∞ {file_path.name}: {e}")
    
    return False

def main(directory: str):
    """
    –û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –¥–ª—è –∑–∞–ø—É—Å–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –æ—á–∏—Å—Ç–∫–∏.
    """
    print("üöÄ –ó–∞–ø—É—Å–∫ —Å–∫—Ä–∏–ø—Ç–∞ –æ—á–∏—Å—Ç–∫–∏ .ui —Ñ–∞–π–ª–æ–≤...")
    
    target_dir = Path(directory)
    if not target_dir.is_dir():
        print(f"üö´ –û—à–∏–±–∫–∞: –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è '{directory}' –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
        sys.exit(1)
        
    # –ò—â–µ–º –≤—Å–µ .ui —Ñ–∞–π–ª—ã —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ (–≤–∫–ª—é—á–∞—è –ø–æ–¥–ø–∞–ø–∫–∏)
    ui_files = list(target_dir.rglob('*.ui'))
    
    if not ui_files:
        print("ü§∑ –§–∞–π–ª—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .ui –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return

    print(f"üîé –ù–∞–π–¥–µ–Ω–æ {len(ui_files)} .ui —Ñ–∞–π–ª–æ–≤. –ù–∞—á–∏–Ω–∞—é –ø—Ä–æ–≤–µ—Ä–∫—É...")
    
    changed_files_count = 0
    
    for file_path in ui_files:
        print(f"   - –ü—Ä–æ–≤–µ—Ä—è—é: {file_path.relative_to(target_dir)}", end='')
        if clean_ui_file(file_path):
            print(" -> ‚úÖ –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ!")
            changed_files_count += 1
        else:
            print(" -> ‚úîÔ∏è OK")
            
    print("\nüéâ –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
    if changed_files_count > 0:
        print(f"üîß –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–æ {changed_files_count} –∏–∑ {len(ui_files)} —Ñ–∞–π–ª–æ–≤.")
    else:
        print("üëç –í—Å–µ —Ñ–∞–π–ª—ã —É–∂–µ –≤ –ø–æ—Ä—è–¥–∫–µ, –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –Ω–µ –ø–æ—Ç—Ä–µ–±–æ–≤–∞–ª–∏—Å—å.")

if __name__ == "__main__":
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º, –ø–µ—Ä–µ–¥–∞–Ω –ª–∏ –ø—É—Ç—å –∫ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ –≤ –∫–∞—á–µ—Å—Ç–≤–µ –∞—Ä–≥—É–º–µ–Ω—Ç–∞
    if len(sys.argv) < 2:
        print("‚ö†Ô∏è –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python clean_ui_files.py <–ø—É—Ç—å_–∫_–ø–∞–ø–∫–µ_—Å_–ø—Ä–æ–µ–∫—Ç–æ–º>")
        # –ï—Å–ª–∏ –ø—É—Ç—å –Ω–µ –ø–µ—Ä–µ–¥–∞–Ω, –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –∫–∞–∫ –∑–∞–ø–∞—Å–Ω–æ–π –≤–∞—Ä–∏–∞–Ω—Ç
        print("‚ÑπÔ∏è –ü—É—Ç—å –Ω–µ —É–∫–∞–∑–∞–Ω. –ü–æ–ø—ã—Ç–∫–∞ —Å–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...")
        target_directory = "."
    else:
        target_directory = sys.argv[1]
    
    main(target_directory)