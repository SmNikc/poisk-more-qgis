–î–æ–±–∞–≤–ª–µ–Ω —Ä–∞–∑–¥–µ–ª [Database] –¥–ª—è MySQL –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏.
[General] enabled = true logLevel = INFO autoUpdate = false defaultCRS = EPSG:4326
[Database] type = mysql host = localhost user = root password = password db = poiskmore
[Paths] dataDir = C:\Projects\POISK-MORE\data logPath = operator_log.txt
[Styles] polygonColor = #228B22 lineColor = #0000FF sruColor = #FF4500 zoneOpacity = 0.4 fontFamily = Arial fontSize = 10
üîπ –õ–µ–Ω—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ–≥–æ –∫–æ–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞ "–ü–æ–∏—Å–∫-–ú–æ—Ä–µ" –¥–ª—è QGIS (–∏—Ç–æ–≥–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Å –º–∏–≥—Ä–∞—Ü–∏–µ–π –Ω–∞ MySQL/ESB) ‚Äî –§—Ä–∞–≥–º–µ–Ω—Ç 2/5
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—É: –î–æ–±–∞–≤–ª—è—é ESB (ActiveMQ –∫–∞–∫ –≤ C#): –ù–æ–≤—ã–π –º–æ–¥—É–ª—å esb_integration.py –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (SITREP, –ø–ª–∞–Ω—ã –ø–æ–∏—Å–∫–∞). –ò—Å–ø–æ–ª—å–∑—É—é apache-nms-activemq (pip install apache-nms-activemq, –Ω–æ –≤ QGIS venv ‚Äî –ø—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å). –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –≤ sitrep_generator.py –∏ controllers –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ ESB. –£–ª—É—á—à–µ–Ω–∏—è: –î–æ–±–∞–≤–ª–µ–Ω–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è ESB –≤ default.ini, –æ–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è.
 CopyEdit 
–ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è ESB (ActiveMQ) –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π (SITREP, –ø–ª–∞–Ω—ã). –£–ª—É—á—à–µ–Ω: Try-except, –∫–æ–Ω—Ñ–∏–≥ –∏–∑ default.ini.
import apache.nms as nms import apache.nms.activemq as amq import configparser import json
config = configparser.ConfigParser() config.read('config/default.ini')
broker_uri = config.get('ESB', 'broker_uri', fallback='tcp://localhost:61616') queue_name = config.get('ESB', 'queue_name', fallback='sar.queue')
def send_message_via_esb(message_data): try: connection_factory = amq.ConnectionFactory(broker_uri) connection = connection_factory.CreateConnection() session = connection.CreateSession() destination = session.GetQueue(queue_name) producer = session.CreateProducer(destination) message = session.CreateTextMessage(json.dumps(message_data)) producer.Send(message) session.Close() connection.Close() return True except Exception as e: print(f"–û—à–∏–±–∫–∞ ESB: {e}") return False
–ü—Ä–∏–º–µ—Ä –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–∏ –≤ sitrep_generator.py: –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –æ—Ç—á–µ—Ç–∞, –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —á–µ—Ä–µ–∑ ESB
send_message_via_esb({"type": "SITREP", "data": data})
üîπ –õ–µ–Ω—Ç–∞ –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –ø–æ–ª–Ω–æ–≥–æ –∫–æ–¥–∞ –ø—Ä–æ–µ–∫—Ç–∞ "–ü–æ–∏—Å–∫-–ú–æ—Ä–µ" –¥–ª—è QGIS (–∏—Ç–æ–≥–æ–≤—ã–π –≤–∞—Ä–∏–∞–Ω—Ç —Å –º–∏–≥—Ä–∞—Ü–∏–µ–π –Ω–∞ MySQL/ESB) ‚Äî –§—Ä–∞–≥–º–µ–Ω—Ç 3/5
–ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Ñ—Ä–∞–≥–º–µ–Ω—Ç—É: –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è MySQL/ESB –≤ —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ñ–∞–π–ª—ã: –û–±–Ω–æ–≤–ª—è—é sitrep_generator_docx.py –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ ESB –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ DOCX. –ê–Ω–∞–ª–æ–≥–∏—á–Ω–æ –¥–ª—è –¥—Ä—É–≥–∏—Ö –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä–æ–≤/–∫–æ–Ω—Ç—Ä–æ–ª–ª–µ—Ä–æ–≤ (–Ω–∞–ø—Ä–∏–º–µ—Ä, region_create.py –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –¥–∞–Ω–Ω—ã–µ —Ä–∞–π–æ–Ω–∞). –£–ª—É—á—à–µ–Ω–∏—è: –î–æ–±–∞–≤–ª–µ–Ω–∞ —Å–µ—Ä–∏–∞–ª–∏–∑–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö –≤ JSON –¥–ª—è ESB.
 CopyEdit 
–ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä SITREP DOCX —Å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–µ–π ESB. –£–ª—É—á—à–µ–Ω: –û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ ESB –ø–æ—Å–ª–µ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏.
from docx import Document import os from datetime import datetime from ..esb.esb_integration import send_message_via_esb
def generate_sitrep_docx(data): doc = Document() doc.add_heading("SITREP", 0) for label in ["type", "datetime", "sru", "coords"]: doc.add_paragraph(f"{label}: {data.get(label, 'N/A')}") doc.add_heading("Weather", level=1) doc.add_paragraph(data.get("weather", 'N/A')) doc.add_heading("Situation", level=1) doc.add_paragraph(data.get("situation", 'N/A')) doc.add_heading("Actions", level=1) doc.add_paragraph(data.get("actions", 'N/A')) doc.add_paragraph(f"Attachment: {data.get('attachment', 'N/A')}")
timestamp = datetime.now().strftime("%Y%m%d_%H%M%S") filename = f"SITREP_{timestamp}.docx" filepath = os.path.join(os.path.expanduser("~"), "Documents", filename) doc.save(filepath)
–û—Ç–ø—Ä–∞–≤–∫–∞ —á–µ—Ä–µ–∑ ESB
if send_message_via_esb({"type": "SITREP_DOCX", "filepath": filepath, "data": data}): print("SITREP –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω —á–µ—Ä–µ–∑ ESB") else: print("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —á–µ—Ä–µ–∑ ESB")
return filepath
